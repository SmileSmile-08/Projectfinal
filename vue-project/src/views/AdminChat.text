<template>
  <div>
    <div id="room-list">
      <h3>Rooms</h3>
      <ul>
        <li v-for="room in roomList" :key="room" @click="joinRoom(room)">
          {{ room }}
        </li>
      </ul>
    </div>

    <ul id="messages">
      <li v-for="(message, index) in messages" :key="index">
        {{ message.sender }}: {{ message.text }}
      </li>
    </ul>

    <form id="form" @submit.prevent="sendMessage">
      <input
        v-model="input"
        id="input"
        autocomplete="off"
        placeholder="Type a message..."
      />
      <button type="submit">Send</button>
    </form>
  </div>
</template>

<script>
import io from 'socket.io-client';

export default {
  data() {
    return {
      messages: [],
      input: '',
      socket: null,
      roomList: ['user123', 'user456', 'user789'],
      currentRoom: null,
      user: { user_id: 28, username: 'adminuser', isAdmin: true }, // ข้อมูลผู้ใช้
    };
  },
  mounted() {
    this.socket = io('http://localhost:8081');
    this.socket.on('chatMessage', (message) => {
      if (message.roomId === this.currentRoom) {
        this.messages.push({
          text: message.message,
          sender: message.sender
        });
      }
    });
  },
methods: {
  joinRoom(room) {
    if (this.currentRoom) {
      this.socket.emit('leaveRoom', this.currentRoom);
    }
    this.currentRoom = room;
    this.messages = [];
    this.socket.emit('joinRoom', this.currentRoom, 'admin'); // ระบุ senderType ว่าเป็น 'admin'
  },
  sendMessage() {
  if (this.input.trim() !== '') {
    const senderName = this.user.isAdmin ? 'แอดมิน' : this.user.username;

    // ล็อกข้อความและสถานะของผู้ส่งในคอนโซล
    console.log(`Sending message from ${senderName}: ${this.input}`);

    // ส่งข้อความ
    this.socket.emit('chatMessage', {
      message: this.input,
      sender: senderName,
      roomId: this.currentRoom,
      isAdmin: this.user.isAdmin // ตรวจสอบว่าค่านี้ถูกส่งไป
    });
    this.input = ''; // ล้างช่องข้อความหลังส่ง
  }
}
}
};
</script>

<style scoped>
#room-list {
  position: absolute;
  left: 0;
  top: 0;
  width: 200px;
  padding: 1rem;
  background: #f0f0f0;
}

#form {
  background: rgba(0, 0, 0, 0.15);
  padding: 0.25rem;
  position: fixed;
  bottom: 0;
  left: 200px;
  right: 0;
  display: flex;
  height: 3rem;
  box-sizing: border-box;
}

#input {
  border: none;
  padding: 0 1rem;
  flex-grow: 1;
  border-radius: 2rem;
  margin: 0.25rem;
}

#input:focus {
  outline: none;
}

#form > button {
  background: #333;
  border: none;
  padding: 0 1rem;
  margin: 0.25rem;
  border-radius: 3px;
  outline: none;
  color: #fff;
}

#messages {
  list-style-type: none;
  margin: 0;
  padding: 0;
  margin-left: 220px;
}

#messages > li {
  padding: 0.5rem 1rem;
}

#messages > li:nth-child(odd) {
  background: #efefef;
}
</style>
